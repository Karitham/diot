/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/auth/login": {
    /** Login */
    post: operations["authLogin"];
  };
  "/auth/logout": {
    /** Logout */
    post: operations["authLogout"];
  };
  "/users": {
    /** Get all users */
    get: operations["getUsers"];
    /** Create a user */
    post: operations["createUser"];
  };
  "/users/{id}": {
    /** Get a user by id */
    get: operations["getUserById"];
    /** Delete a user by id */
    delete: operations["deleteUserById"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    User: {
      id: string;
      /** @example hi mark */
      name: string;
      /** @example x@example.com */
      email: string;
    };
    UserCreate: {
      /** @example hi mark */
      name: string;
      /** @example x@example.com */
      email: string;
      /** @example DWD21378udh#g3@#d */
      password: string;
    };
    Error: {
      /** @description Error message */
      message: string;
      /** @description Request ID */
      request_id?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  /** Login */
  authLogin: {
    responses: {
      /** @description ok */
      200: {
        content: {
          "application/json": {
            /** @example sess_dwquijlbndwqbyuidhkwqdyuibqwd89d30y12dh22389d:dh189gd2d1ghod921 */
            token: string;
          };
        };
      };
      /** @description unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Logout */
  authLogout: {
    responses: {
      /** @description ok */
      200: never;
      /** @description unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Get all users */
  getUsers: {
    responses: {
      /** @description ok */
      200: {
        content: {
          "application/json": (components["schemas"]["User"])[];
        };
      };
      /** @description unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Create a user */
  createUser: {
    /** @description Create a new user */
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserCreate"];
      };
    };
    responses: {
      /** @description ok */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Get a user by id */
  getUserById: {
    parameters: {
      path: {
        /** @description id of user to return */
        id: string;
      };
    };
    responses: {
      /** @description ok */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Delete a user by id */
  deleteUserById: {
    parameters: {
      path: {
        /** @description id of user to delete */
        id: string;
      };
    };
    responses: {
      /** @description ok */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
}
